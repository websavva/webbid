/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    media: Media;
    products: Product;
    orders: Order;
    productFiles: ProductFile;
    productCategoryFeatures: ProductCategoryFeature;
    productCategories: ProductCategory;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  role: 'user' | 'admin';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  user?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  user?: (number | null) | User;
  name: string;
  description?: string | null;
  price: number;
  category: number | ProductCategory;
  productFile: number | ProductFile;
  approvedForSale?: ('pending' | 'denied' | 'approved') | null;
  priceId?: string | null;
  stripeId?: string | null;
  images: {
    image: number | Media;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;

  // virtual fields
  imageUrls: {
    thumbnail: string[];
    tablet: string[];
    card: string[];
    original: string[];
  }
  categoryLabel: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productCategories".
 */
export interface ProductCategory {
  id: number;
  name: string;
  label: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productFiles".
 */
export interface ProductFile {
  id: number;
  user?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  status: 'processing' | 'canceled' | 'success';
  user: number | User;
  products: (number | Product)[];
  updatedAt: string;
  createdAt: string;

  // virtual fields
  isSuccess: boolean;
  isPaid: boolean;
  isCanceled: boolean;
  isProcessing: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productCategoryFeatures".
 */
export interface ProductCategoryFeature {
  id: number;
  name: string;
  href: string;
  category: number | ProductCategory;
  externalImageUrl?: string | null;
  image?: number | Media | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}

declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}
